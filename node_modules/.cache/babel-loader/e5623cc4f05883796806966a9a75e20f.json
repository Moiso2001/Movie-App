{"ast":null,"code":"export const GET_MOVIES = 'GET_MOVIES';\nexport const GET_MOVIE_DETAIL = 'GET_MOVIE_DETAIL';\nexport const ADD_MOVIE_FAVORITE = 'ADD_MOVIE_FAVORITE';\nexport const REMOVE_MOVIE_FAVORITE = 'REMOVE_MOVIE_FAVORITE';\nexport const CLEAR_DETAIL_MOVIE = 'CLEAR_DETAIL_MOVIE';\nexport const CLEAR_MOVIE_LIST = 'CLEAR_MOVIE_LIST';\nexport const getMovies = function (title) {\n  return function (dispatch) {\n    return fetch(\"https://www.omdbapi.com/?apikey=ac45fe53&&s=\" + title).then(response => response.json()).then(json => {\n      json.Response === 'True' ? dispatch({\n        type: GET_MOVIES,\n        payload: json\n      }) : alert('Movie doesnt exists');\n    }); // Control to check if the movie exists or not avoiding errors                                                                                                                                      \n  }; // Because the JSON have a Response that is what I'm validating\n};\nexport const getMoviesDetail = imdbID => {\n  return function (dispatch) {\n    return fetch(\"https://www.omdbapi.com/?apikey=ac45fe53&&i=\" + imdbID) // Search movie by ID looking for extra details\n    .then(response => response.json()).then(json => dispatch({\n      type: GET_MOVIE_DETAIL,\n      payload: json\n    }));\n  };\n};\nexport const addMovieFavorite = id => {\n  return {\n    type: ADD_MOVIE_FAVORITE,\n    // Reducer handle functionality\n    payload: id\n  };\n};\nexport const removeMovieFavorite = id => {\n  return {\n    type: REMOVE_MOVIE_FAVORITE,\n    payload: id\n  };\n};\nexport const clearDetailMovie = () => {\n  return {\n    type: CLEAR_DETAIL_MOVIE\n  };\n};\nexport const clearMovieList = () => {\n  return {\n    type: CLEAR_MOVIE_LIST\n  };\n};","map":{"version":3,"names":["GET_MOVIES","GET_MOVIE_DETAIL","ADD_MOVIE_FAVORITE","REMOVE_MOVIE_FAVORITE","CLEAR_DETAIL_MOVIE","CLEAR_MOVIE_LIST","getMovies","title","dispatch","fetch","then","response","json","Response","type","payload","alert","getMoviesDetail","imdbID","addMovieFavorite","id","removeMovieFavorite","clearDetailMovie","clearMovieList"],"sources":["C:/Users/Moiso/OneDrive/Desktop/Projects to Show/movie-app/src/actions/index.js"],"sourcesContent":["export const GET_MOVIES = 'GET_MOVIES';\r\nexport const GET_MOVIE_DETAIL = 'GET_MOVIE_DETAIL';\r\nexport const ADD_MOVIE_FAVORITE = 'ADD_MOVIE_FAVORITE';\r\nexport const REMOVE_MOVIE_FAVORITE = 'REMOVE_MOVIE_FAVORITE';\r\nexport const CLEAR_DETAIL_MOVIE = 'CLEAR_DETAIL_MOVIE'; \r\nexport const CLEAR_MOVIE_LIST = 'CLEAR_MOVIE_LIST';\r\n\r\nexport const getMovies = function(title){\r\n    return function(dispatch){\r\n        return fetch(\"https://www.omdbapi.com/?apikey=ac45fe53&&s=\" + title)\r\n        .then(response => response.json())\r\n        .then(json => {\r\n            json.Response === 'True' ? dispatch({type: GET_MOVIES, payload: json}): alert('Movie doesnt exists')}); // Control to check if the movie exists or not avoiding errors                                                                                                                                      \r\n    }                                                                                                               // Because the JSON have a Response that is what I'm validating\r\n}\r\n\r\nexport const getMoviesDetail = (imdbID) => {\r\n    return function(dispatch){\r\n        return fetch(\"https://www.omdbapi.com/?apikey=ac45fe53&&i=\" + imdbID)           // Search movie by ID looking for extra details\r\n        .then(response => response.json())\r\n        .then(json => dispatch({type: GET_MOVIE_DETAIL, payload: json}))\r\n    }\r\n}\r\n\r\nexport const addMovieFavorite = (id) => {           \r\n    return{ \r\n        type: ADD_MOVIE_FAVORITE,                                                      // Reducer handle functionality\r\n        payload: id,\r\n    };\r\n}\r\n\r\nexport const removeMovieFavorite = (id) => {\r\n    return{                                                                             \r\n        type: REMOVE_MOVIE_FAVORITE,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const clearDetailMovie = () => {\r\n    return {\r\n        type: CLEAR_DETAIL_MOVIE,\r\n    }\r\n}\r\n\r\nexport const clearMovieList = () => {\r\n    return{\r\n        type: CLEAR_MOVIE_LIST,\r\n    }\r\n}"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,SAAS,GAAG,UAASC,KAAT,EAAe;EACpC,OAAO,UAASC,QAAT,EAAkB;IACrB,OAAOC,KAAK,CAAC,iDAAiDF,KAAlD,CAAL,CACNG,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,EAENF,IAFM,CAEDE,IAAI,IAAI;MACVA,IAAI,CAACC,QAAL,KAAkB,MAAlB,GAA2BL,QAAQ,CAAC;QAACM,IAAI,EAAEd,UAAP;QAAmBe,OAAO,EAAEH;MAA5B,CAAD,CAAnC,GAAwEI,KAAK,CAAC,qBAAD,CAA7E;IAAqG,CAHlG,CAAP,CADqB,CAIuF;EAC/G,CALD,CADoC,CAM4E;AACnH,CAPM;AASP,OAAO,MAAMC,eAAe,GAAIC,MAAD,IAAY;EACvC,OAAO,UAASV,QAAT,EAAkB;IACrB,OAAOC,KAAK,CAAC,iDAAiDS,MAAlD,CAAL,CAAyE;IAAzE,CACNR,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,EAENF,IAFM,CAEDE,IAAI,IAAIJ,QAAQ,CAAC;MAACM,IAAI,EAAEb,gBAAP;MAAyBc,OAAO,EAAEH;IAAlC,CAAD,CAFf,CAAP;EAGH,CAJD;AAKH,CANM;AAQP,OAAO,MAAMO,gBAAgB,GAAIC,EAAD,IAAQ;EACpC,OAAM;IACFN,IAAI,EAAEZ,kBADJ;IAC6E;IAC/Ea,OAAO,EAAEK;EAFP,CAAN;AAIH,CALM;AAOP,OAAO,MAAMC,mBAAmB,GAAID,EAAD,IAAQ;EACvC,OAAM;IACFN,IAAI,EAAEX,qBADJ;IAEFY,OAAO,EAAEK;EAFP,CAAN;AAIH,CALM;AAOP,OAAO,MAAME,gBAAgB,GAAG,MAAM;EAClC,OAAO;IACHR,IAAI,EAAEV;EADH,CAAP;AAGH,CAJM;AAMP,OAAO,MAAMmB,cAAc,GAAG,MAAM;EAChC,OAAM;IACFT,IAAI,EAAET;EADJ,CAAN;AAGH,CAJM"},"metadata":{},"sourceType":"module"}